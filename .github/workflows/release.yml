name: Release on GitHub & PyPI

on:
  push:
    tags:
      - "v*"
    branches:
      - cmeel
  pull_request:
    branches:
      - cmeel

env:
  CMEEL_LOG_LEVEL: DEBUG
  DEPS: crocoddyl[build] mim-solvers[build] numdifftools
  PROJECT: colmpc

jobs:
  wheel:
    name: "Build ${{ matrix.python }} ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: ["ubuntu-24.04", "ubuntu-24.04-arm", "macos-13", "macos-14"]
        python: ["cp39", "cp310", "cp311", "cp312", "cp313"]
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: 'true'
      - run: pipx install cibuildwheel
      - run: cibuildwheel
        env:
          CIBW_BUILD: "${{ matrix.python }}-*"
          CIBW_SKIP: "*-musllinux* *i686"
          CIBW_MANYLINUX_X86_64_IMAGE: "quay.io/pypa/manylinux_2_28_x86_64"
          CIBW_MANYLINUX_AARCH64_IMAGE: "quay.io/pypa/manylinux_2_28_aarch64"
          CIBW_REPAIR_WHEEL_COMMAND: ""
          CIBW_ENVIRONMENT: CMEEL_LOG_LEVEL="DEBUG"
      - uses: actions/upload-artifact@v4
        with:
          name: "artifact-${{ matrix.os }}-${{ matrix.python }}"
          path: wheelhouse

  test-wheel:
    needs: ["wheel"]
    name: "Test ${{ matrix.python }} ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: ["ubuntu-24.04", "ubuntu-24.04-arm", "macos-13", "macos-14"]
        python: ["cp39", "cp310", "cp311", "cp312", "cp313"]
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: "artifact-${{ matrix.os }}-${{ matrix.python }}"
          path: wheelhouse
      - run: echo "${{ matrix.python }}" | sed "s/cp3/PYTHON_VERSION=3./" >> "${GITHUB_ENV}"
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: index
        run: |
          python -m pip install -U pip
          python -m pip install wheel simple503
          python -m simple503 --base-url ${{ github.workspace }}/wheelhouse ${{ github.workspace }}/wheelhouse
      - name: install deps
        run: python -m pip install cmeel $DEPS
      - name: install wheel
        run: python -m pip install -i "file://${{ github.workspace }}/wheelhouse" $PROJECT

  sdist:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: 'true'
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: setup
        run: |
          python -m pip install -U pip
          python -m pip install build cmeel[build] $DEPS
      - name: build sdist
        run: python -m build -nso dist .
      - uses: actions/upload-artifact@v4
        with:
          name: artifact-sdist
          path: dist

  test-sdist:
    runs-on: ubuntu-24.04
    needs: ["sdist"]
    name: "Test sdist"
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: "artifact-sdist"
          path: dist
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: setup
        run: |
          python -m pip install -U pip
          python -m pip install build cmeel[build] $DEPS
      - name: install sdist
        run: python -m pip install dist/$(echo "$PROJECT" | tr - _)*.tar.gz

  release:
    needs: ["test-wheel", "test-sdist"]
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-24.04
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.ref_name }}
      - run: curl https://github.com/nim65s.gpg | gpg --import
      - name: validate signature
        run: >
          git verify-tag --raw ${{ github.ref_name }} 2>&1
          | grep -q 'VALIDSIG 9B1A79065D2F2B806C8A5A1C7D2ACDAF4653CF28'
      - uses: actions/download-artifact@v5
        with:
          merge-multiple: true
          path: dist
      - run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - run: gh release create -t "Release ${{ env.TAG}}" "${{ env.TAG }}" dist/$(echo $PROJECT | tr - _)*.{whl,tar.gz}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

  check:
    if: always()
    name: check-macos-linux-cmeel

    needs:
      - test-wheel
      - test-sdist

    runs-on: Ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
